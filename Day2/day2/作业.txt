5. 计算
	128 64 32 16 8 4 2 1
   十进制192 到二进制
		0110 0000
   十进制122 到二进制
		0111 1010
   十进制392 到二进制
		0001 1000 1000

   二进制1 1110 0100 1010 到十进制
		1e4a
		10 * 16^0 + 4 * 16^1 + 14 * 16^2 + 1 * 16^3
		10+64+3584+4096
		7754

   二进制1 1110 0111 1010 到十进制
		1e7a
		10 * 16^0 + 7 * 16^1 + 14 * 16^2 + 1 * 16^3
		10+112+3584+4096
		7808
   二进制1 1111 0111 1010 到十进制
		1f7a
		10 * 16^0 + 7 * 16^1 + 15 * 16^2 + 1 * 16^3
		10+112+3840+4096
		8058

   0.875，0.625，0.5，1.25  192.5  198.625 转化为二进制
	方法:小数转二进制,乘2取整,直到没有小数为止,然后顺序排列
		0.875 = 0.111
			0.875*2=1.75 = 1
			0.75*2=1.5 = 1
			0.5*2=1	
		0.625 = 0.101
			0.625*2=1.25 = 1
			0.25*2=0.5 = 0
			0.5*2=1 = 1   
		0.5 = 0.1
			0.5*2=1 = 1
		1.25 = 1.01
			0.25*2=0.5 = 0
			0.5*2=1 = 1
		192.5 = 1100 0000.1
			0.5*2=1 = 1
		198.625 = 1100 0110.101
			0.625*2=1.25 = 1
			0.25*2=0.5 = 0
			0.5*2=1 = 1  

   1000 1010 0101 0010 0101 到八进制，16进制   
		02122445
		0x8a525
   10 0010 1100 0101 0010 1001 0010 1101 0010 0101    到八进制，16进制
		02130512226445
		0x22c5292d25


12345,765 (8进制 -》二进制)
	12345	= 001010011100101
	765		= 111110101

12345a,765f (16进制 -》二进制)
	12345a	= 0001 0010 0011 0100 0101 1010
	765f	= 0111 0110 0101 1111

6  补码计算
-3   -9 相加
	-3:
		原码:1000 0011
		反码:1111 1100
		补码:1111 1101
	-9:
		原码:1000 1001
		反码:1111 0110
		补码:1111 0111
		
		 1111 1101
		+1111 0111
	补码:1111 0100
	反码:1000 1011 +1
	原码:1000 1100
		=-12

-3   +9 相加
	-3:
		原码:1000 0011
		反码:1111 1100
		补码:1111 1101
	+9:
		补码:0000 1001
		
		 1111 1101
		+0000 1001
	补码:0000 0110
		=6

+3   -9 相加
	+3:
		补码:0000 0011
	-9:
		原码:1000 1001
		反码:1111 0110
		补码:1111 0111
		
		 0000 0011
		+1111 0111
	补码:1111 1010
	反码:1000 0101 +1
	原码:1000 0110
		=-6



推理运算结果
	int num = -2;
	int num1 = 4294967294u;		  
	unsigned int data = 4294967294u;
	unsigned int data1 = -2;

	//-2的补码:1111 1111 1111 1110
	printf("%d", num);		//-2
	printf("\n%u", num);	//4294967294
	printf("\n%d", num1);	//-2
	printf("\n%u", num1);	 //4294967294
	printf("\n%u", data);   //4294967294
	printf("\n%d", data);	//-2
	printf("\n%u", data1);	//4294967294 
	printf("\n%d", data1);	//-2